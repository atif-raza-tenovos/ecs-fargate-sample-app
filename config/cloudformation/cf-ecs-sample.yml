{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc-ecs-sample": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.10.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample"
          }
        ]
      }
    },
    "ecs-sample-priavte1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.10.11.0/24",
        "AvailabilityZone": "us-west-1a",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-private 1"
          }
        ]
      }
    },
    "ecs-sample-public2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.10.2.0/24",
        "AvailabilityZone": "us-west-1b",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-public 2"
          }
        ]
      }
    },
    "ecs-sample-priavte2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.10.12.0/24",
        "AvailabilityZone": "us-west-1b",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-private 2"
          }
        ]
      }
    },
    "ecs-sample-public1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.10.1.0/24",
        "AvailabilityZone": "us-west-1a",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-public 1"
          }
        ]
      }
    },
    "igw-ecs-sample": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample IGW"
          }
        ]
      }
    },
    "dopt-ecs-sample": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl-ecs-sample": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        }
      }
    },
    "rtb-public": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample public routing"
          }
        ]
      }
    },
    "rtb-private": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample private routing"
          }
        ]
      }
    },
    "eip": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "instance-app-api": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::982947632035:instance-profile/ecs-sample-ec2-role",
        "ImageId": "ami-013de1b045799b282",
        "InstanceType": "t2.micro",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-api"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ecs-sample-public1"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.10.1.197",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgecssampleec2"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "cacheecssample001": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "AZMode": "single-az",
        "CacheNodeType": "cache.t2.micro",
        "Engine": "redis",
        "EngineVersion": "5.0.6",
        "NumCacheNodes": "1",
        "PreferredAvailabilityZone": "us-west-1b",
        "PreferredMaintenanceWindow": "thu:02:30-thu:03:30",
        "CacheSubnetGroupName": {
          "Ref": "cachesubnetecssampleredissubnetgroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "sgecssampleredis",
              "GroupId"
            ]
          }
        ]
      }
    },
    "cacheecssample002": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "AutoMinorVersionUpgrade": "true",
        "AZMode": "single-az",
        "CacheNodeType": "cache.t2.micro",
        "Engine": "redis",
        "EngineVersion": "5.0.6",
        "NumCacheNodes": "1",
        "PreferredAvailabilityZone": "us-west-1a",
        "PreferredMaintenanceWindow": "thu:02:30-thu:03:30",
        "CacheSubnetGroupName": {
          "Ref": "cachesubnetecssampleredissubnetgroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "sgecssampleredis",
              "GroupId"
            ]
          }
        ]
      }
    },
    "dbsubnetecssamplesubnetgroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "ecs-sample-subnet-group",
        "SubnetIds": [
          {
            "Ref": "ecs-sample-priavte2"
          },
          {
            "Ref": "ecs-sample-priavte1"
          }
        ]
      }
    },
    "cachesubnetecssampleredissubnetgroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "ecs-sample-redis-subnet-group",
        "SubnetIds": [
          {
            "Ref": "ecs-sample-priavte2"
          },
          {
            "Ref": "ecs-sample-priavte1"
          }
        ]
      }
    },
    "sgecssampleec2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ec2",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-ec2"
          }
        ]
      }
    },
    "sgecssampleredis": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "redis",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-redis\t"
          }
        ]
      }
    },
    "sgecssamplemysql": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "mysql",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-mysql\t"
          }
        ]
      }
    },
    "sgecssampleloadbalancer": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "lb",
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ecs-sample-loadbalancer"
          }
        ]
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": "vpc-204d8c4b",
        "Tags": [
          {
            "Key": "Name",
            "Value": "default vpc sg"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        },
        "SubnetId": {
          "Ref": "ecs-sample-public1"
        }
      }
    },
    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        },
        "SubnetId": {
          "Ref": "ecs-sample-priavte2"
        }
      }
    },
    "subnetacl7": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        },
        "SubnetId": {
          "Ref": "ecs-sample-public2"
        }
      }
    },
    "subnetacl8": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl-ecs-sample"
        },
        "SubnetId": {
          "Ref": "ecs-sample-priavte1"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "InternetGatewayId": {
          "Ref": "igw-ecs-sample"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb-private"
        },
        "SubnetId": {
          "Ref": "ecs-sample-priavte1"
        }
      }
    },
    "subnetroute6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb-private"
        },
        "SubnetId": {
          "Ref": "ecs-sample-priavte2"
        }
      }
    },
    "route3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb-public"
        },
        "GatewayId": {
          "Ref": "igw-ecs-sample"
        }
      },
      "DependsOn": "gw2"
    },
    "route4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb-private"
        }
      }
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc-ecs-sample"
        },
        "DhcpOptionsId": {
          "Ref": "dopt-ecs-sample"
        }
      }
    },
    "ingress11": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgecssampleloadbalancer"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "ingress12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress13": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "sgecssampleredis"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgecssamplemysql"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleredis"
        },
        "IpProtocol": "tcp",
        "FromPort": "6379",
        "ToPort": "6379",
        "SourceSecurityGroupId": {
          "Ref": "sgecssampleec2"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssamplemysql"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "SourceSecurityGroupId": {
          "Ref": "sgecssampleec2"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleloadbalancer"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress19": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleloadbalancer"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress20": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "982947632035"
      }
    },
    "egress6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleec2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress7": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleredis"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress8": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssamplemysql"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress9": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgecssampleloadbalancer"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress10": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "ecs-sample-cf",
  "Outputs": {
    "vpc-ecs-sampleId": {
      "Value": {
        "Ref": "vpc-ecs-sample"
      }
    },
    "igw-ecs-sampleId": {
      "Value": {
        "Ref": "igw-ecs-sample"
      }
    },
    "eipIP": {
      "Value": {
        "Ref": "eip"
      }
    },
    "instance-app-apiId": {
      "Value": {
        "Ref": "instance-app-api"
      }
    },
    "instance-app-apiIP": {
      "Value": {
        "Fn::GetAtt": [
          "instance-app-api",
          "PublicIp"
        ]
      }
    },
    "cacheecssample001Address": {
      "Value": {
        "Fn::GetAtt": [
          "cacheecssample001",
          "ConfigurationEndpoint.Address"
        ]
      }
    },
    "cacheecssample002Address": {
      "Value": {
        "Fn::GetAtt": [
          "cacheecssample002",
          "ConfigurationEndpoint.Address"
        ]
      }
    }
  }
}